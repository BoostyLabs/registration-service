name: Build and push Docker image to GCR

on:
  workflow_call:
    inputs:
      registry_login_server:
        required: true
        type: string
      workload_identity_provider:
        required: true
        type: string
      service_account:
        required: true
        type: string

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout main project
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          path: registration

      - name: Set up JDK 21
        uses: actions/setup-java@99b8673ff64fbf99d8d325f52d9a5bdedb8483e9 # v4.2.1
        with:
          distribution: 'temurin'
          java-version: 21
          cache: 'maven'

      - name: Authenticate to GCP
        id: auth
        uses: google-github-actions/auth@71fee32a0bb7e97b4d33d548e7d957010649d8fa # v2.1.3
        with:
          workload_identity_provider: ${{ inputs.workload_identity_provider }}
          service_account: ${{ inputs.service_account }}

      - name: Log in to gcloud
        run: |-
          gcloud auth login --brief --cred-file="${{ steps.auth.outputs.credentials_file_path }}"

      # The current version of micronaut-maven-plugin has an issue with Docker credential helpers that
      # don’t respond to `get` with a `serverURL`. We work around that by ensuring we only hit Jib’s
      # CredentialRetrieverFactory, which uses well-known helpers (in this case, docker-credential-gcr) for
      # certain repositories. However, the action only has docker-credential-gcloud available to it,
      # so we add a symlink-alias to our path, since it implements the same interface.
      - name: Docker credential helper workaround
        run: |-
          mkdir bin && \
          cd bin && \
          ln -s $(which docker-credential-gcloud) docker-credential-gcr && \
          echo "$(pwd)" >> $GITHUB_PATH

      - name: Build and push container image
        working-directory: registration
        run: |
          ./mvnw -e -B deploy \
            -Dpackaging=docker \
            -Djib.to.image="${{ inputs.registry_login_server }}/registration-service:${GITHUB_REF_NAME}"
